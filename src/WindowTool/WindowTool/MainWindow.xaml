<Window x:Class="WindowTool.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WindowTool"
        xmlns:svg="http://sharpvectors.codeplex.com/svgc/"
        xmlns:wfi="clr-namespace:System.Windows.Forms.Integration;assembly=WindowsFormsIntegration"
        xmlns:wf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
        mc:Ignorable="d" 
        Title="MainWindowddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd"
       SizeToContent="WidthAndHeight" WindowStyle="None" 
        
        Loaded="Window_Loaded" MouseLeftButtonDown="Window_MouseLeftButtonDown">
    <!--AllowsTransparency="True" Background="{x:Null}"-->
    <Window.Resources>
        <ResourceDictionary>
            <ControlTemplate x:Key="NormalButtonTemplate">
                <Image  x:Name="bgImg" Focusable="False" Source="{svg:SvgImage Source=Icon/target.svg}" Stretch="Uniform"/>
                <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsMouseUp,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" Value="True">
                        <Setter TargetName="bgImg" Property="Opacity" Value="0"></Setter>
                    </DataTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="NoneButtonTemplate">
                <Border Background="Blue"></Border>
            </ControlTemplate>
            <Style TargetType="TextBox" x:Key="TextBlockTextBoxStyle">
                <Setter Property="Background" Value="Transparent"></Setter>
                <Setter Property="BorderThickness" Value="0"></Setter>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Foreground" Value="White"></Setter>
            </Style>
            <Style x:Key="NormalButton" TargetType="Button">
                <Setter Property="Template" Value="{StaticResource ResourceKey=NormalButtonTemplate}"/>
            </Style>
            <ImageBrush x:Key="target" Stretch="Uniform" ImageSource="{svg:SvgImage Source=Icon/target.svg}" x:Shared="false"/>
        </ResourceDictionary>
    </Window.Resources>
    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="10"/>
            <RowDefinition MinHeight="80"/>
            <RowDefinition Height="10"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="10"/>
            <RowDefinition MinHeight="80"/>
            <RowDefinition Height="10"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="10"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="30"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="30"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition MinWidth="80" />
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="30"/>
        </Grid.ColumnDefinitions>
        <Border Background="#4FFF" >
            <Border.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="退出" Click="ExitMenuItem_Click"></MenuItem>
                </ContextMenu>
            </Border.ContextMenu>
        </Border>
        <Border  CornerRadius="0" Background="#4AAA" Grid.Row="1" Grid.RowSpan="10"/>
        <Border  CornerRadius="0" Background="#4AAA" Grid.Column="1" Grid.ColumnSpan="10"/>

        <Button Grid.Column="2" x:Name="btnTarget" Margin="0,3" Cursor="Hand" Style="{StaticResource NormalButton}"  PreviewMouseLeftButtonDown="Button_PreviewMouseLeftButtonDown" PreviewMouseLeftButtonUp="Button_PreviewMouseLeftButtonUp" PreviewMouseMove="Button_PreviewMouseMove" />

        <Slider Grid.Column="4" x:Name="widSli" HorizontalAlignment="Stretch" VerticalAlignment="Center" Value="{Binding Path=Width, NotifyOnSourceUpdated=True}" Binding.SourceUpdated="widSli_SourceUpdated" PreviewMouseLeftButtonDown="widSli_PreviewMouseLeftButtonDown" Ticks="1" Maximum="3840" Minimum="1"></Slider>
        <TextBox Grid.Column="6" Style="{StaticResource TextBlockTextBoxStyle}" Text="{Binding ElementName=widSli, Path=Value,UpdateSourceTrigger=PropertyChanged}"/>

        <Button Grid.Column="8" Click="Button_Click"></Button>
        
        
        <Slider  x:Name="opSli" Grid.Row="2" HorizontalAlignment="Center" Orientation="Vertical" Value="{Binding Path=Opacity, NotifyOnSourceUpdated=True}" Binding.SourceUpdated="opSli_SourceUpdated"  Ticks="1" Maximum="255" Minimum="1"></Slider>
        <TextBox Grid.Row="4" Style="{StaticResource TextBlockTextBoxStyle}" Text="{Binding ElementName=opSli, Path=Value,UpdateSourceTrigger=PropertyChanged}"></TextBox>
        <Slider  x:Name="heSli" HorizontalAlignment="Center" Grid.Row="6" Orientation="Vertical" Value="{Binding Path=Height, NotifyOnSourceUpdated=True}" Binding.SourceUpdated="heSli_SourceUpdated" PreviewMouseLeftButtonDown="widSli_PreviewMouseLeftButtonDown" Ticks="1" Maximum="2160" Minimum="1" FlowDirection="LeftToRight" UseLayoutRounding="False" RenderTransformOrigin="0.5,0.5">
            <Slider.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="180"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Slider.RenderTransform>
        </Slider>
        <TextBox Grid.Row="8" FontSize="11" Style="{StaticResource TextBlockTextBoxStyle}" Text="{Binding ElementName=heSli, Path=Value,UpdateSourceTrigger=PropertyChanged}"/>

        <!--<Button x:Name="dd"  Grid.Row="10" Click="dd_Click"></Button>-->
        <!--<Viewbox Grid.Row="1" Grid.Column="1"  Grid.RowSpan="10" Grid.ColumnSpan="10">-->
            <wfi:WindowsFormsHost  Grid.Row="1" Grid.Column="1"  Grid.RowSpan="10" Grid.ColumnSpan="10">
                <wf:Panel x:Name="panel"></wf:Panel>
            </wfi:WindowsFormsHost>
        <!--</Viewbox>-->
    </Grid>
</Window>
